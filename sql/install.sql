CREATE TABLE IF NOT EXISTS `presets` (`id` int(11) NOT NULL auto_increment, `name` varchar(100) NOT NULL, PRIMARY KEY  (`id`));
CREATE TABLE IF NOT EXISTS `projects` (`id` int(11) NOT NULL auto_increment, `name` varchar(100) NOT NULL, `dir` varchar(1024) NOT NULL, `date` datetime NOT NULL, PRIMARY KEY  (`id`));
CREATE TABLE IF NOT EXISTS `scanitems` (`id` int(11) NOT NULL auto_increment, `parentid` int(11) NOT NULL, `name` varchar(100) NOT NULL, `description` varchar(1024) NOT NULL, PRIMARY KEY  (`id`));
CREATE TABLE IF NOT EXISTS `scanresults` (`id` int(11) NOT NULL auto_increment, `parentid` int(11) NOT NULL, `file` varchar(512) NOT NULL, `item` varchar(100) NOT NULL, `line` int(11) NOT NULL, `code` varchar(4096) NOT NULL, `vulnerable` tinyint(1) NOT NULL, `reviewed` tinyint(1) NOT NULL, PRIMARY KEY  (`id`));
CREATE TABLE IF NOT EXISTS `scans` (`id` int(11) NOT NULL auto_increment, `status` varchar(100) NOT NULL, `parentid` int(11) NOT NULL, `date` datetime NOT NULL, `presetid` int(11) NOT NULL, `presetname` varchar(100) NOT NULL, `pid` int(11) NOT NULL, PRIMARY KEY  (`id`));
CREATE TABLE IF NOT EXISTS `scantokens` (`id` int(11) NOT NULL auto_increment, `parentid` int(11) NOT NULL, `index` int(11) NOT NULL, `type` tinyint(4) NOT NULL, `token` varchar(50) NOT NULL, `value` varchar(1024) NOT NULL, `regexp` tinyint(1) NOT NULL, PRIMARY KEY  (`id`));
CREATE TABLE IF NOT EXISTS `tokens` (`id` int(11) NOT NULL auto_increment, `name` varchar(50) NOT NULL, `syntax` varchar(50) NOT NULL, `reference` varchar(200) NOT NULL, PRIMARY KEY  (`id`));
INSERT INTO `presets` (`id`, `name`) VALUES(1, 'Code Execution');
INSERT INTO `presets` (`id`, `name`) VALUES(2, 'Command Execution');
INSERT INTO `presets` (`id`, `name`) VALUES(3, 'Path Traversal');
INSERT INTO `presets` (`id`, `name`) VALUES(4, 'Globals Overwrite');
INSERT INTO `presets` (`id`, `name`) VALUES(6, 'Local/Remote File Include');
INSERT INTO `presets` (`id`, `name`) VALUES(7, 'SQL Injection');
INSERT INTO `presets` (`id`, `name`) VALUES(8, 'RPNG state leakage');
INSERT INTO `presets` (`id`, `name`) VALUES(9, 'Misc');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(1, 0, 'Function Call', '');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(2, 0, 'Function Declaration', '');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(3, 1, 'eval()', 'Scan for every eval() function call\nFunction eval() dynamically evaluates PHP-code passed to it, user supplied data may lead to arbitrary code execution');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(4, 1, 'preg_replace()', 'Scan for every preg_replace() function call with e modifier\nThe e modifier makes preg_replace() treat the replacement parameter as PHP code after the appropriate references substitution is done');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(5, 1, 'call_user_func()', 'Scan for every call_user_func() function call\nCalls a user function');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(6, 1, 'call_user_func_array()', 'Scan for every call_user_func_array() function call\nCalls a user function with parameters');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(7, 1, 'create_function()', 'Scan for every create_function() function call\nCreates an anonymous (lambda-style) function');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(8, 1, 'mb_ereg(i)_replace()', 'Scan for every mb_ereg_replace() or mb_eregi_replace() call\nIf the modifier e is specified, replacement string will be evaluated as PHP expression. No automatic escaping will happen (as known from preg_replace()). Not taking care of this will most likely create remote code execution vulnerabilities.');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(9, 1, 'assert()', 'Scan for every assert() function call\nChecks if assertion is FALSE by evaluating PHP code');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(10, 2, 'popen()', 'Scan for every popen() function call\nOpens process file pointer, improper sanitizing leads to arbitrary command execution');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(11, 2, 'system()', 'Scan for every system() function call\nExecutes an external program and displays the output, improper sanitizing leads to arbitrary command execution');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(12, 2, 'passthru()', 'Scan for every passthru() function call\nExecutes an external program and displays raw output, improper sanitizing leads to arbitrary command execution');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(13, 2, 'exec()', 'Scan for every exec() function call\nExecutes an external program, improper sanitizing leads to arbitrary command execution');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(14, 2, 'proc_open()', 'Scan for every proc_open() function call\nExecutes a command and opens file pointers for input/output, improper sanitizing leads to arbitrary command execution');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(15, 2, 'shell_exec()', 'Scan for every shell_exec() function call\nExecutes command via shell and return the complete output as a string, improper sanitizing leads to arbitrary command execution');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(16, 2, 'Backticks', 'Scan for backticks\r\nPHP executes the contents of the backticks as a shell command');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(17, 3, 'fopen() in read mode', 'Scan for every fopen() function call in read mode\nOpens file or URL, improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(18, 3, 'fopen() in write mode', 'Scan for every fopen() function call in write mode\nOpens file or URL, improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(19, 3, 'file_get_contents()', 'Scan for every file_get_contents() function call\nReads entire file into a string, improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(20, 3, 'file()', 'Scan for every file() function call\nReads entire file into an array, improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(21, 3, 'readfile()', 'Scan for every readfile() function call\nOutputs a file, improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(22, 3, 'file_put_contents()', 'Scan for every file_put_contents() function call\nWrite a string to a file, improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(23, 3, 'readgzfile()', 'Scan for every readgzfile() function call\nOutputs a gz-file, if plain, will directly read from the file without decompression; improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(24, 3, 'gzfile()', 'Scan for every gzfile() function call\nRead entire gz-file into an array, if plain, will directly read from the file without decompression; improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(25, 3, 'gzopen()', 'Scan for every gzopen() function call\nOpens a gz-file, if plain, gzread() will directly read from the file without decompression; improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(26, 3, 'highlight_file()', 'Scan for every highlight_file() function call\nPrints out a syntax highlighted version of the code, improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(27, 3, 'move_uploaded_file()', 'Scan for every move_uploaded_file() function call\nMoves an uploaded file to a new location; improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(28, 3, 'copy()', 'Scan for every copy() function call\nCopies file, improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(53, 3, 'rename()', 'Scan for every rename() function call\nRenames a file or directory, improper sanitized data allows to conduct directory traversal attacks');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(29, 4, 'extract()', 'Scan for every extract() function call\nImports variables into the current symbol table from an array, global variables can be overwritten unless EXTR_SKIP is specified');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(30, 4, 'import_request_variables()', 'Scan for every import_request_variables() function call\nImports GET/POST/Cookie variables into the global scope overwriting existing variables');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(31, 4, 'Variable variables ($$a)', 'Scan for variable variables\r\nA variable variable takes the value of a variable and treats that as the name of a variable overwriting existing variables of the same name within the scope');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(32, 4, 'Variable variables (${$a})', 'Scan for variable variables\r\nA variable variable takes the value of a variable and treats that as the name of a variable overwriting existing variables of the same name within the scope');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(33, 4, 'Variable variables ("${$a}")', 'Scan for variable variables\r\nA variable variable takes the value of a variable and treats that as the name of a variable overwriting existing variables of the same name within the scope');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(34, 6, 'include()', 'Scan for every include() function call with a variable\nIncludes and evaluates the specified file, externally controlled data passed to the function may lead to LFI/RFI vulnerabilities\n');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(35, 6, 'include_once()', 'Scan for every include_once() function call with a variable\nIncludes and evaluates the specified file, externally controlled data passed to the function may lead to LFI/RFI vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(36, 6, 'require()', 'Scan for every require() function call with a variable\nIncludes and evaluates the specified file, externally controlled data passed to the function may lead to LFI/RFI vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(37, 6, 'require_once()', 'Scan for every require_once() function call with a variable\nIncludes and evaluates the specified file, externally controlled data passed to the function may lead to LFI/RFI vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(38, 6, 'virtual()', 'Scan for every virtual() function call with a variable\nPerforms an Apache sub-request to include CGI scripts or .shtml files, may be used on PHP files as well, externally controlled data passed to the function may lead to LFI/RFI vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(39, 7, 'SELECT query', 'Scan for SELECT queries with variables after WHERE (no vars before)\nImproper sanitization of input passed into SQL queries causes SQL Injection vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(40, 7, 'SELECT query', 'Scan for SELECT queries with variables after WHERE (vars before as well)\nImproper sanitization of input passed into SQL queries causes SQL Injection vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(41, 7, 'UPDATE query', 'Scan for UPDATE queries with variables after SET (no vars before)\nImproper sanitization of input passed into SQL queries causes SQL Injection vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(42, 7, 'UPDATE query', 'Scan for UPDATE queries with variables after SET (vars before as well)\nImproper sanitization of input passed into SQL queries causes SQL Injection vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(43, 7, 'INSERT query', 'Scan for INSERT queries with variables after VALUES (no vars before)\nImproper sanitization of input passed into SQL queries causes SQL Injection vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(44, 7, 'INSERT query', 'Scan for INSERT queries with variables after VALUES (vars before as well)\nImproper sanitization of input passed into SQL queries causes SQL Injection vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(45, 7, 'DELETE query', 'Scan for DELETE queries with variables after WHERE (no vars before)\nImproper sanitization of input passed into SQL queries causes SQL Injection vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(46, 7, 'DELETE query', 'Scan for DELETE queries with variables after WHERE (vars before as well)\nImproper sanitization of input passed into SQL queries causes SQL Injection vulnerabilities');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(55, 8, 'rand()', 'Scan for every rand() function call\nGenerates a random integer, on windows every generated value becomes a seed for the next one');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(56, 8, 'srand()', 'Scan for every srand() function call\nSeeds the random number generator, insufficient seeding leads to problems with security');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(57, 8, 'mt_rand()', 'Scan for every mt_rand() function call\nGenerates a better random value than rand(), incorrect usage leads to RPNG state leakage');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(58, 8, 'mt_srand()', 'Scan for every mt_srand() function call\nSeeds Mersenne Twister random number generator, insufficient seeding leads to problems with security\n');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(59, 8, 'shuffle()', 'Scan for every shuffle() function call\nShuffles an array, can be predicted if RPNG was seeded insufficiently');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(60, 8, 'array_rand()', 'Scan for every array_rand() function call\nPicks one or more random entries out of an array, can be predicted if RPNG was seeded insufficiently');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(51, 9, 'phpinfo()', 'Scan for phpinfo() function call\nOutputs lots of PHP information');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(52, 9, 'Useful Comments', 'Scan for comments that possibly point to some problems within the code\nMany software vulnerabilities are actually documented within source\ncode comments. This often occurs because developers are aware that a particular operation is unsafe, and record a reminder to fix the problem later, which they never get around to doing.');
INSERT INTO `scanitems` (`id`, `parentid`, `name`, `description`) VALUES(54, 9, 'unserialize()', 'Scan for every unserialize() function call\nCreates a PHP value from a stored representation, can be highly dangerous on user input');
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(1, 1, 0, 0, 'T_STRING', 'function_name', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(2, 1, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(3, 1, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(4, 2, 0, 0, 'T_FUNCTION', 'function', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(5, 2, 1, 1, 'T_STRING', 'function_name', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(6, 2, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(7, 3, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(8, 3, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(9, 3, 0, 0, 'T_EVAL', 'eval', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(10, 4, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(11, 4, 2, 0, 'T_STRING_LITERAL', '[^\\w][msiU]*e[msiU]*[''\\"]*$', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(12, 4, 0, 0, 'T_STRING', 'preg_replace', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(13, 5, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(14, 5, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(15, 5, 0, 0, 'T_STRING', 'call_user_func', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(16, 6, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(17, 6, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(18, 6, 0, 0, 'T_STRING', 'call_user_func_array', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(19, 7, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(20, 7, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(21, 7, 0, 0, 'T_STRING', 'create_function', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(22, 8, 3, 0, 'T_STRING_LITERAL', 'e', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(23, 8, 4, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(24, 8, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(25, 8, 0, 0, 'T_STRING', '^mb_eregi*_replace$', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(26, 9, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(27, 9, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(28, 9, 0, 0, 'T_STRING', 'assert', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(29, 10, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(30, 10, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(31, 10, 0, 0, 'T_STRING', 'popen', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(32, 11, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(33, 11, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(34, 11, 0, 0, 'T_STRING', 'system', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(35, 12, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(36, 12, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(37, 12, 0, 0, 'T_STRING', 'passthru', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(38, 13, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(39, 13, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(40, 13, 0, 0, 'T_STRING', 'exec', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(41, 14, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(42, 14, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(43, 14, 0, 0, 'T_STRING', 'proc_open', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(44, 15, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(45, 15, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(46, 15, 0, 0, 'T_STRING', 'shell_exec', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(47, 16, 2, 0, 'T_TERMINAL', '`', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(48, 16, 1, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(49, 16, 0, 0, 'T_TERMINAL', '`', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(50, 17, 3, 0, 'T_STRING_LITERAL', 'r', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(51, 17, 4, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(52, 17, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(53, 17, 0, 0, 'T_STRING', 'fopen', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(54, 18, 2, 0, 'T_STRING_LITERAL', '[aw]', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(55, 18, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(57, 18, 0, 0, 'T_STRING', 'fopen', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(58, 19, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(59, 19, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(60, 19, 0, 0, 'T_STRING', 'file_get_contents', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(61, 20, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(62, 20, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(63, 20, 0, 0, 'T_STRING', 'file', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(64, 21, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(65, 21, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(66, 21, 0, 0, 'T_STRING', 'readfile', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(67, 22, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(68, 22, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(69, 22, 0, 0, 'T_STRING', 'file_put_contents', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(70, 23, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(71, 23, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(72, 23, 0, 0, 'T_STRING', 'readgzfile', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(73, 24, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(74, 24, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(75, 24, 0, 0, 'T_STRING', 'gzfile', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(76, 25, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(77, 25, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(78, 25, 0, 0, 'T_STRING', 'gzopen', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(79, 26, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(80, 26, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(81, 26, 0, 0, 'T_STRING', 'highlight_file', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(82, 27, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(83, 27, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(84, 27, 0, 0, 'T_STRING', 'move_uploaded_file', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(85, 28, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(86, 28, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(87, 28, 0, 0, 'T_STRING', 'copy', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(88, 29, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(89, 29, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(90, 29, 0, 0, 'T_STRING', 'extract', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(91, 30, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(92, 30, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(93, 30, 0, 0, 'T_STRING', 'import_request_variables', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(94, 31, 0, 0, 'T_TERMINAL', '$', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(95, 31, 1, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(96, 32, 1, 0, 'T_TERMINAL', '{', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(97, 32, 3, 0, 'T_TERMINAL', '}', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(98, 32, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(99, 32, 0, 0, 'T_TERMINAL', '$', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(100, 33, 2, 0, 'T_TERMINAL', '}', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(101, 33, 1, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(102, 33, 0, 0, 'T_DOLLAR_OPEN_CURLY_BRACES', '${', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(104, 34, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(105, 34, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(106, 34, 0, 0, 'T_INCLUDE', 'include', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(107, 35, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(108, 35, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(109, 35, 0, 0, 'T_INCLUDE_ONCE', 'include_once', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(110, 36, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(111, 36, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(112, 36, 0, 0, 'T_REQUIRE', 'require', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(113, 37, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(114, 37, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(115, 37, 0, 0, 'T_REQUIRE_ONCE', 'require_once', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(116, 38, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(117, 38, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(118, 38, 0, 0, 'T_STRING', 'virtual', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(119, 39, 2, 0, 'T_TERMINAL', '[,;\\)]', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(120, 39, 1, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(121, 39, 0, 0, 'T_STRING_LITERAL', 'SELECT.+?FROM.+?WHERE', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(122, 40, 3, 0, 'T_TERMINAL', '[,;\\)]', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(123, 40, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(124, 40, 0, 0, 'T_STRING_LITERAL', 'SELECT', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(125, 41, 3, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(127, 41, 4, 0, 'T_TERMINAL', '[,;\\)]', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(129, 41, 0, 0, 'T_STRING_LITERAL', '^[''"]*UPDATE.+?SET', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(130, 42, 3, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(131, 42, 2, 0, 'T_STRING_LITERAL', 'SET', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(132, 42, 4, 0, 'T_TERMINAL', '[,;\\)]', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(134, 42, 0, 0, 'T_STRING_LITERAL', '^[''"]*UPDATE', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(135, 43, 2, 0, 'T_TERMINAL', '[,;\\)]', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(136, 43, 1, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(137, 43, 0, 0, 'T_STRING_LITERAL', '^[''"]*INSERT.+?INTO.+?VALUES', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(138, 44, 3, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(139, 44, 2, 0, 'T_STRING_LITERAL', 'VALUES', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(140, 44, 4, 0, 'T_TERMINAL', '[,;\\)]', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(142, 44, 0, 0, 'T_STRING_LITERAL', '^[''"]*INSERT', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(143, 45, 2, 0, 'T_TERMINAL', '[,;\\)]', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(144, 45, 1, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(145, 45, 0, 0, 'T_STRING_LITERAL', '^[''"]*DELETE.+?FROM.+?WHERE', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(146, 46, 3, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(147, 46, 2, 0, 'T_STRING_LITERAL', 'WHERE', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(148, 46, 4, 0, 'T_TERMINAL', '[,;\\)]', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(150, 46, 0, 0, 'T_STRING_LITERAL', '^[''"]*DELETE.+?FROM', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(171, 53, 0, 0, 'T_STRING', 'rename', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(170, 53, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(169, 53, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(168, 52, 0, 0, 'T_COMMENT', '(bug|problem|bad|hope|todo|fix|overflow|crash|inject|xss|trust)', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(167, 51, 0, 0, 'T_STRING', 'phpinfo', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(166, 51, 2, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(165, 40, 1, 0, 'T_STRING_LITERAL', 'WHERE', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(177, 22, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(176, 21, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(175, 19, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(174, 18, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(173, 17, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(172, 20, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(178, 23, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(179, 24, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(180, 25, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(181, 26, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(182, 27, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(183, 28, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(184, 53, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(185, 3, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(186, 4, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(187, 5, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(188, 6, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(189, 7, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(190, 8, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(191, 9, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(192, 10, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(193, 11, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(194, 12, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(195, 13, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(196, 14, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(197, 15, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(198, 29, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(199, 30, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(200, 34, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(201, 35, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(202, 36, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(203, 37, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(204, 38, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(205, 51, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(206, 1, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(207, 2, 2, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(208, 54, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(209, 54, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(210, 54, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(211, 54, 0, 0, 'T_STRING', 'unserialize', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(212, 55, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(213, 55, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(214, 55, 0, 0, 'T_STRING', 'rand', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(215, 56, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(216, 56, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(217, 56, 0, 0, 'T_STRING', 'srand', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(218, 57, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(219, 57, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(220, 57, 0, 0, 'T_STRING', 'mt_rand', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(221, 58, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(222, 58, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(223, 58, 0, 0, 'T_STRING', 'mt_srand', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(224, 59, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(225, 59, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(226, 59, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(227, 59, 0, 0, 'T_STRING', 'shuffle', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(228, 60, 3, 0, 'T_TERMINAL', ')', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(229, 60, 2, 0, 'T_VARIABLE', '.', 1);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(230, 60, 1, 1, 'T_TERMINAL', '(', 0);
INSERT INTO `scantokens` (`id`, `parentid`, `index`, `type`, `token`, `value`, `regexp`) VALUES(231, 60, 0, 0, 'T_STRING', 'array_rand', 0);
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(1, 'T_ABSTRACT', 'abstract', '<a href="http://www.php.net/manual/en/language.oop5.abstract.php">Class Abstraction</a> (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(2, 'T_AND_EQUAL', '&amp;=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(3, 'T_ARRAY', 'array()', '<a href="http://www.php.net/manual/en/function.array.php">array()</a>, <a href="http://www.php.net/manual/en/language.types.array.php#language.types.array.syntax">array syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(4, 'T_ARRAY_CAST', '(array)', '<a href="http://www.php.net/manual/en/language.types.type-juggling.php#language.types.typecasting">type-casting</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(5, 'T_AS', 'as', '<a href="http://www.php.net/manual/en/control-structures.foreach.php">foreach</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(6, 'T_BAD_CHARACTER', 'anything below ASCII 32 except 	 (0x09), \n (0x0a) ', '');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(7, 'T_BOOLEAN_AND', '&amp;&amp;', '<a href="http://www.php.net/manual/en/language.operators.logical.php">logical operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(8, 'T_BOOLEAN_OR', '||', '<a href="http://www.php.net/manual/en/language.operators.logical.php">logical operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(9, 'T_BOOL_CAST', '(bool) or (boolean)', '<a href="http://www.php.net/manual/en/language.types.type-juggling.php#language.types.typecasting">type-casting</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(10, 'T_BREAK', 'break', '<a href="http://www.php.net/manual/en/control-structures.break.php">break</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(11, 'T_CASE', 'case', '<a href="http://www.php.net/manual/en/control-structures.switch.php">switch</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(12, 'T_CATCH', 'catch', '<a href="http://www.php.net/manual/en/language.exceptions.php">Exceptions</a> (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(13, 'T_CHARACTER', 'not used anymore', '');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(14, 'T_CLASS', 'class', '<a href="http://www.php.net/manual/en/language.oop5.php">classes and objects</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(15, 'T_CLASS_C', '__CLASS__', '<a href="http://www.php.net/manual/en/language.constants.predefined.php">magic constants</a>\r\n      (available since PHP 4.3.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(16, 'T_CLONE', 'clone', '<a href="http://www.php.net/manual/en/language.oop5.php">classes and objects</a>\r\n      (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(17, 'T_CLOSE_TAG', '?&gt; or %&gt;', '<a href="http://www.php.net/manual/en/language.basic-syntax.phpmode.php">escaping\r\n     from HTML</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(18, 'T_COMMENT', '// or #, and /* */ in PHP 5', '<a href="http://www.php.net/manual/en/language.basic-syntax.comments.php">comments</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(19, 'T_CONCAT_EQUAL', '.=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(20, 'T_CONST', 'const', '<a href="http://www.php.net/manual/en/language.constants.php">class constants</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(21, 'T_CONSTANT_ENCAPSED_STRING', '&quot;foo&quot; or &#039;bar&#039;', '<a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax">string syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(22, 'T_CONTINUE', 'continue', '<a href="http://www.php.net/manual/en/control-structures.continue.php">continue</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(23, 'T_CURLY_OPEN', '{$', '<a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing.complex">complex\r\n     variable parsed syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(24, 'T_DEC', '--', '<a href="http://www.php.net/manual/en/language.operators.increment.php">incrementing/decrementing\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(25, 'T_DECLARE', 'declare', '<a href="http://www.php.net/manual/en/control-structures.declare.php">declare</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(26, 'T_DEFAULT', 'default', '<a href="http://www.php.net/manual/en/control-structures.switch.php">switch</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(27, 'T_DIR', '__DIR__', '<a href="http://www.php.net/manual/en/language.constants.predefined.php">magic constants</a> (available\r\n     since PHP 5.3.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(28, 'T_DIV_EQUAL', '/=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(29, 'T_DNUMBER', '0.12, etc', '<a href="http://www.php.net/manual/en/language.types.float.php">floating point numbers</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(30, 'T_DOC_COMMENT', '/** */', '<a href="http://www.php.net/manual/en/language.basic-syntax.comments.php">PHPDoc style comments</a>\r\n      (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(31, 'T_DO', 'do', '<a href="http://www.php.net/manual/en/control-structures.do.while.php">do..while</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(32, 'T_DOLLAR_OPEN_CURLY_BRACES', '${', '<a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing.complex">complex\r\n     variable parsed syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(33, 'T_DOUBLE_ARROW', '=&gt;', '<a href="http://www.php.net/manual/en/language.types.array.php#language.types.array.syntax">array syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(34, 'T_DOUBLE_CAST', '(real), (double) or (float)', '<a href="http://www.php.net/manual/en/language.types.type-juggling.php#language.types.typecasting">type-casting</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(35, 'T_DOUBLE_COLON', '::', 'see <b><tt class="constant">T_PAAMAYIM_NEKUDOTAYIM</tt></b> below');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(36, 'T_ECHO', 'echo', '<a href="http://www.php.net/manual/en/function.echo.php">echo()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(37, 'T_ELSE', 'else', '<a href="http://www.php.net/manual/en/control-structures.else.php">else</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(38, 'T_ELSEIF', 'elseif', '<a href="http://www.php.net/manual/en/control-structures.elseif.php">elseif</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(39, 'T_EMPTY', 'empty', '<a href="http://www.php.net/manual/en/function.empty.php">empty()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(40, 'T_ENCAPSED_AND_WHITESPACE', '&quot; $a&quot;', '<a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing">constant part of\r\n     string with variables</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(41, 'T_ENDDECLARE', 'enddeclare', '<a href="http://www.php.net/manual/en/control-structures.declare.php">declare</a>, <a href="http://www.php.net/manual/en/control-structures.alternative-syntax.php">alternative syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(42, 'T_ENDFOR', 'endfor', '<a href="http://www.php.net/manual/en/control-structures.for.php">for</a>, <a href="http://www.php.net/manual/en/control-structures.alternative-syntax.php">alternative syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(43, 'T_ENDFOREACH', 'endforeach', '<a href="http://www.php.net/manual/en/control-structures.foreach.php">foreach</a>, <a href="http://www.php.net/manual/en/control-structures.alternative-syntax.php">alternative syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(44, 'T_ENDIF', 'endif', '<a href="http://www.php.net/manual/en/control-structures.if.php">if</a>, <a href="http://www.php.net/manual/en/control-structures.alternative-syntax.php">alternative syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(45, 'T_ENDSWITCH', 'endswitch', '<a href="http://www.php.net/manual/en/control-structures.switch.php">switch</a>, <a href="http://www.php.net/manual/en/control-structures.alternative-syntax.php">alternative syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(46, 'T_ENDWHILE', 'endwhile', '<a href="http://www.php.net/manual/en/control-structures.while.php">while</a>, <a href="http://www.php.net/manual/en/control-structures.alternative-syntax.php">alternative syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(47, 'T_END_HEREDOC', '', '<a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc">heredoc syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(48, 'T_EVAL', 'eval()', '<a href="http://www.php.net/manual/en/function.eval.php">eval()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(49, 'T_EXIT', 'exit or die', '<a href="http://www.php.net/manual/en/function.exit.php">exit()</a>, <a href="http://www.php.net/manual/en/function.die.php">die()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(50, 'T_EXTENDS', 'extends', '<a href="http://www.php.net/manual/en/language.oop5.basic.php#language.oop5.basic.extends">extends</a>, <a href="http://www.php.net/manual/en/language.oop5.php">classes and objects</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(51, 'T_FILE', '__FILE__', '<a href="http://www.php.net/manual/en/language.constants.predefined.php">magic constants</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(52, 'T_FINAL', 'final', '<a href="http://www.php.net/manual/en/language.oop5.final.php">Final Keyword</a> (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(53, 'T_FOR', 'for', '<a href="http://www.php.net/manual/en/control-structures.for.php">for</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(54, 'T_FOREACH', 'foreach', '<a href="http://www.php.net/manual/en/control-structures.foreach.php">foreach</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(55, 'T_FUNCTION', 'function or cfunction', '<a href="http://www.php.net/manual/en/language.functions.php">functions</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(56, 'T_FUNC_C', '__FUNCTION__', '<a href="http://www.php.net/manual/en/language.constants.predefined.php">magic constants</a>\r\n      (available since PHP 4.3.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(57, 'T_GLOBAL', 'global', '<a href="http://www.php.net/manual/en/language.variables.scope.php">variable scope</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(58, 'T_GOTO', 'goto', '<a href="http://www.php.net/manual/en/control-structures.goto.php"> (available since PHP 5.3.0)</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(59, 'T_HALT_COMPILER', '__halt_compiler()', '<a href="http://www.php.net/manual/en/function.halt-compiler.php">__halt_compiler</a> (available since PHP 5.1.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(60, 'T_IF', 'if', '<a href="http://www.php.net/manual/en/control-structures.if.php">if</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(61, 'T_IMPLEMENTS', 'implements', '<a href="http://www.php.net/manual/en/language.oop5.interfaces.php">Object Interfaces</a> (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(62, 'T_INC', '++', '<a href="http://www.php.net/manual/en/language.operators.increment.php">incrementing/decrementing\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(63, 'T_INCLUDE', 'include()', '<a href="http://www.php.net/manual/en/function.include.php">include()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(64, 'T_INCLUDE_ONCE', 'include_once()', '<a href="http://www.php.net/manual/en/function.include-once.php">include_once()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(65, 'T_INLINE_HTML', '', '<a href="http://www.php.net/manual/en/language.basic-syntax.phpmode.php">text outside PHP</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(66, 'T_INSTANCEOF', 'instanceof', '<a href="http://www.php.net/manual/en/language.operators.type.php">type operators</a>\r\n      (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(67, 'T_INT_CAST', '(int) or (integer)', '<a href="http://www.php.net/manual/en/language.types.type-juggling.php#language.types.typecasting">type-casting</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(68, 'T_INTERFACE', 'interface', '<a href="http://www.php.net/manual/en/language.oop5.interfaces.php">Object Interfaces</a> (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(69, 'T_ISSET', 'isset()', '<a href="http://www.php.net/manual/en/function.isset.php">isset()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(70, 'T_IS_EQUAL', '==', '<a href="http://www.php.net/manual/en/language.operators.comparison.php">comparison operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(71, 'T_IS_GREATER_OR_EQUAL', '&gt;=', '<a href="http://www.php.net/manual/en/language.operators.comparison.php">comparison operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(72, 'T_IS_IDENTICAL', '===', '<a href="http://www.php.net/manual/en/language.operators.comparison.php">comparison operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(73, 'T_IS_NOT_EQUAL', '!= or &lt;&gt;', '<a href="http://www.php.net/manual/en/language.operators.comparison.php">comparison operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(74, 'T_IS_NOT_IDENTICAL', '!==', '<a href="http://www.php.net/manual/en/language.operators.comparison.php">comparison operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(75, 'T_IS_SMALLER_OR_EQUAL', '&lt;=', '<a href="http://www.php.net/manual/en/language.operators.comparison.php">comparison operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(76, 'T_LINE', '__LINE__', '<a href="http://www.php.net/manual/en/language.constants.predefined.php">magic constants</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(77, 'T_LIST', 'list()', '<a href="http://www.php.net/manual/en/function.list.php">list()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(78, 'T_LNUMBER', '123, 012, 0x1ac, etc', '<a href="http://www.php.net/manual/en/language.types.integer.php">integers</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(79, 'T_LOGICAL_AND', 'and', '<a href="http://www.php.net/manual/en/language.operators.logical.php">logical operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(80, 'T_LOGICAL_OR', 'or', '<a href="http://www.php.net/manual/en/language.operators.logical.php">logical operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(81, 'T_LOGICAL_XOR', 'xor', '<a href="http://www.php.net/manual/en/language.operators.logical.php">logical operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(82, 'T_METHOD_C', '__METHOD__', '<a href="http://www.php.net/manual/en/language.constants.predefined.php">magic constants</a>\r\n      (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(83, 'T_MINUS_EQUAL', '-=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(84, 'T_ML_COMMENT', '/* and */', '<a href="http://www.php.net/manual/en/language.basic-syntax.comments.php">comments</a>\r\n      (PHP 4 only)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(85, 'T_MOD_EQUAL', '%=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(86, 'T_MUL_EQUAL', '*=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(87, 'T_NS_C', '__NAMESPACE__', '<a href="http://www.php.net/manual/en/language.namespaces.php">namespaces</a>.\r\n      Also defined as <b><tt class="constant">T_NAMESPACE</tt></b>\r\n      (available since PHP 5.3.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(88, 'T_NEW', 'new', '<a href="http://www.php.net/manual/en/language.oop5.php">classes and objects</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(89, 'T_NUM_STRING', '&quot;$a[0]&quot;', '<a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing">numeric array index\r\n     inside string</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(90, 'T_OBJECT_CAST', '(object)', '<a href="http://www.php.net/manual/en/language.types.type-juggling.php#language.types.typecasting">type-casting</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(91, 'T_OBJECT_OPERATOR', '-&gt;', '<a href="http://www.php.net/manual/en/language.oop5.php">classes and objects</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(92, 'T_OLD_FUNCTION', 'old_function', '(PHP 4 Only)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(93, 'T_OPEN_TAG', '&lt;?php, &lt;? or &lt;%', '<a href="http://www.php.net/manual/en/language.basic-syntax.phpmode.php">escaping\r\n     from HTML</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(94, 'T_OPEN_TAG_WITH_ECHO', '&lt;?= or &lt;%=', '<a href="http://www.php.net/manual/en/language.basic-syntax.phpmode.php">escaping\r\n     from HTML</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(95, 'T_OR_EQUAL', '|=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(96, 'T_PAAMAYIM_NEKUDOTAYIM', '::', '<a href="http://www.php.net/manual/en/language.oop5.paamayim-nekudotayim.php">::</a>. Also defined as\r\n      <b><tt class="constant">T_DOUBLE_COLON</tt></b>.');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(97, 'T_PLUS_EQUAL', '+=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(98, 'T_PRINT', 'print()', '<a href="http://www.php.net/manual/en/function.print.php">print()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(99, 'T_PRIVATE', 'private', '<a href="http://www.php.net/manual/en/language.oop5.php">classes and objects</a>\r\n      (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(100, 'T_PUBLIC', 'public', '<a href="http://www.php.net/manual/en/language.oop5.php">classes and objects</a>\r\n      (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(101, 'T_PROTECTED', 'protected', '<a href="http://www.php.net/manual/en/language.oop5.php">classes and objects</a>\r\n      (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(102, 'T_REQUIRE', 'require()', '<a href="http://www.php.net/manual/en/function.require.php">require()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(103, 'T_REQUIRE_ONCE', 'require_once()', '<a href="http://www.php.net/manual/en/function.require-once.php">require_once()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(104, 'T_RETURN', 'return', '<a href="http://www.php.net/manual/en/functions.returning-values.php">returning values</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(105, 'T_SL', '&lt;&lt;', '<a href="http://www.php.net/manual/en/language.operators.bitwise.php">bitwise\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(106, 'T_SL_EQUAL', '&lt;&lt;=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(107, 'T_SR', '&gt;&gt;', '<a href="http://www.php.net/manual/en/language.operators.bitwise.php">bitwise\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(108, 'T_SR_EQUAL', '&gt;&gt;=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(109, 'T_START_HEREDOC', '&lt;&lt;&lt;', '<a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc">heredoc\r\n     syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(110, 'T_STATIC', 'static', '<a href="http://www.php.net/manual/en/language.variables.scope.php">variable scope</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(111, 'T_STRING', '&quot;$a[a]&quot;', '<a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing">string array index\r\n     inside string</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(112, 'T_STRING_CAST', '(string)', '<a href="http://www.php.net/manual/en/language.types.type-juggling.php#language.types.typecasting">type-casting</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(113, 'T_STRING_VARNAME', '&quot;${a', '<a href="http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing.complex">complex\r\n     variable parsed syntax</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(114, 'T_SWITCH', 'switch', '<a href="http://www.php.net/manual/en/control-structures.switch.php">switch</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(115, 'T_THROW', 'throw', '<a href="http://www.php.net/manual/en/language.exceptions.php">Exceptions</a> (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(116, 'T_TRY', 'try', '<a href="http://www.php.net/manual/en/language.exceptions.php">Exceptions</a> (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(117, 'T_UNSET', 'unset()', '<a href="http://www.php.net/manual/en/function.unset.php">unset()</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(118, 'T_UNSET_CAST', '(unset)', '<a href="http://www.php.net/manual/en/language.types.type-juggling.php#language.types.typecasting">type-casting</a>\r\n     (available since PHP 5.0.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(119, 'T_USE', 'use', '<a href="http://www.php.net/manual/en/language.namespaces.php">namespaces</a>\r\n     (available since PHP 5.3.0)');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(120, 'T_VAR', 'var', '<a href="http://www.php.net/manual/en/language.oop5.php">classes and objects</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(121, 'T_VARIABLE', '$foo', '<a href="http://www.php.net/manual/en/language.variables.php">variables</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(122, 'T_WHILE', 'while', '<a href="http://www.php.net/manual/en/control-structures.while.php">while</a>, <a href="http://www.php.net/manual/en/control-structures.do.while.php">do..while</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(123, 'T_WHITESPACE', '\\t \\r\\n', '');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(124, 'T_XOR_EQUAL', '^=', '<a href="http://www.php.net/manual/en/language.operators.assignment.php">assignment\r\n     operators</a>');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(125, 'T_TERMINAL', ';,()[]{}', 'Helper token to regard terminal symbols as real tokens. Required, should be used to mark terminal position of the token sequence.');
INSERT INTO `tokens` (`id`, `name`, `syntax`, `reference`) VALUES(126, 'T_STRING_LITERAL', '" string "', 'Helper token to union T_CONSTANT_ENCAPSED_STRING and T_ENCAPSED_AND_WHITESPACE and to minimize their difference');